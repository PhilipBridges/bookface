# import Post, Message from "./generated/prisma.graphql"

type Query {
  feed(wallId: ID, orderBy: MessageOrderByInput): [Post!]!
  allFeed(orderBy: MessageOrderByInput): [Post!]!
  post(id: ID!, wallId: ID): Post!
  me: User
  userQuery: [User!]
  boxQuery: [User!]
  messageQuery(first: Int, after: String, before: String, last: Int, orderBy: MessageOrderByInput): [Message!]!
  friendQuery(target: ID!): Profile
}

type Mutation {
  signup(email: String!, password: String!, name: String!): AuthPayload!
  login(email: String!, password: String!): AuthPayload!
  createPost(title: String!, text: String!, wallId: ID): Post!
  deletePost(id: ID!): Post!
  createMessage(text: String!, target: String!): Message!
  deleteMessage(id: ID!): Message
  addFriend(target: ID!): User
  deleteFriend(target: ID!): User
}

type AuthPayload {
  token: String
  user: User
  error: String
}

type User {
  id: ID
  email: String
  name: String
  posts: [Post!]
  friendList: [String!]
}

type Profile {
  proId: ID!
  proName: String!
  friendList: [User!]!
}
